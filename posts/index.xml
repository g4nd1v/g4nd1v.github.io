<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on g4nd1v</title>
    <link>https://g4nd1v.github.io/posts/</link>
    <description>Recent content in Posts on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>©2025, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 20 May 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>HackTheBox Writeup - Active Room</title>
        <link>https://g4nd1v.github.io/posts/hackthebox-active/</link>
        <pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Tue, 20 May 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/hackthebox-active/</guid>
        <description>Active Title Active Description Walkthrough of the &amp;ldquo;Active&amp;rdquo; machine on HackTheBox, showcasing SMB enumeration, GPP password extraction, Kerberoasting, and gaining SYSTEM access via Impacket&amp;rsquo;s PsExec. Difficulty Easy Maker eks &amp;amp; mrb3n8132 Enumeration Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 └─$ nmap -sC -sV -oA nmap/active 10.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Active/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>htb-active</category>
            
          
            
              <category>smb</category>
            
          
            
              <category>gpp-password</category>
            
          
            
              <category>kerberos</category>
            
          
            
              <category>kerberoasting</category>
            
          
            
              <category>ldap</category>
            
          
            
              <category>impacket</category>
            
          
            
              <category>psexec</category>
            
          
            
              <category>windows-ad</category>
            
          
            
              <category>privilege-escalation</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Windows</category>
            
          
            
              <category>HackTheBox/Windows/AD</category>
            
          
        
        
      </item>
      
      <item>
        <title>HackTheBox Writeup - Markup Room</title>
        <link>https://g4nd1v.github.io/posts/hackthebox-markup/</link>
        <pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Tue, 20 May 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/hackthebox-markup/</guid>
        <description>Markup Title Markup Description Walkthrough of the &amp;ldquo;Markup&amp;rdquo; machine on HackTheBox, featuring enumeration, XML external entity (XXE) injection to gain a user shell, and privilege escalation via writable batch script to SYSTEM. Difficulty Very Easy Maker MrR3boot Enumeration Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 └─$ nmap -sC -sV 10.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Markup/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>htb-markup</category>
            
          
            
              <category>nmap</category>
            
          
            
              <category>xxe</category>
            
          
            
              <category>winbox</category>
            
          
            
              <category>xml-injection</category>
            
          
            
              <category>apache</category>
            
          
            
              <category>php</category>
            
          
            
              <category>ssh</category>
            
          
            
              <category>privilege-escalation</category>
            
          
            
              <category>batch-replacement</category>
            
          
            
              <category>reverse-shell</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Windows</category>
            
          
        
        
      </item>
      
      <item>
        <title>HackTHeBox Writeup - Sea Room</title>
        <link>https://g4nd1v.github.io/posts/hackthebox-sea/</link>
        <pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sun, 18 May 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/hackthebox-sea/</guid>
        <description>Sea Title Sea Description Detailed walkthrough of the Sea room on HackTheBox platform, covering initial enumeration, exploiting vulnerabilities, and obtaining user and root flags. Difficulty Easy Maker FisMatHack Enumeration Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 └─$ cat nmap/tcp_default.nmap # Nmap 7.95 scan initiated Sun May 18 16:49:14 2025 as: /usr/lib/nmap/nmap -sCV -T4 --min-rate 10000 -p- -v -oA nmap/tcp_default 10.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Sea/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>htb-sea</category>
            
          
            
              <category>feroxbuster</category>
            
          
            
              <category>wondercms</category>
            
          
            
              <category>cve-2023-41425</category>
            
          
            
              <category>xss</category>
            
          
            
              <category>reverse-shell</category>
            
          
            
              <category>hashcat</category>
            
          
            
              <category>file-read</category>
            
          
            
              <category>command-injection</category>
            
          
            
              <category>linpeas</category>
            
          
            
              <category>ssh</category>
            
          
            
              <category>tunneling</category>
            
          
            
              <category>privilege-escalation</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>b01lers CTF 2025 writeups</title>
        <link>https://g4nd1v.github.io/posts/ctf-b01lersc-2025/</link>
        <pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sun, 20 Apr 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/ctf-b01lersc-2025/</guid>
        <description>web/when the sunk cost fallacy
https://when.atreides.b01lersc.tf/
Writeup To get the flag in this CTF challenge, we need to send a POST request to the /gamble endpoint with a specific Date header that results in the server generating a SHA-256 hash starting with two 0xFF bytes. Here&amp;rsquo;s how you can do it:
Understanding the Vulnerability: The server uses the Date header from the request to generate a Unix timestamp. This timestamp is hashed using SHA-256, and if the first two bytes of the hash are 0xFF 0xFF, the flag is returned.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/ctf-b01lersc-2025/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>CTF</category>
            
          
        
        
          
            
              <category>CTF</category>
            
          
        
        
      </item>
      
      <item>
        <title>Intigriti Writeup - hackdonalds challenge</title>
        <link>https://g4nd1v.github.io/posts/ctf-hackdonalds/</link>
        <pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Wed, 16 Apr 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/ctf-hackdonalds/</guid>
        <description>Title hackdonalds Description Find the FLAG and win Intigriti swag! 🏆 Difficulty Easy Maker Bastien + CryptoCat Solution I was browsing web application and then I have checked all the endpoints in buildManifest file.
1 &amp;#34;/&amp;#34;:[&amp;#34;static/chunks/pages/index-962b18549cc4f828.js&amp;#34;],&amp;#34;/_error&amp;#34;:[&amp;#34;static/chunks/pages/_error-8353112a01355ec2.js&amp;#34;],&amp;#34;/admin&amp;#34;:[&amp;#34;static/chunks/pages/admin-6c2dae3cae78011c.js&amp;#34;],&amp;#34;/ice-cream-detail/[id]&amp;#34;:[&amp;#34;static/chunks/pages/ice-cream-detail/[id]-b32c99038b6ec0fd.js&amp;#34;],&amp;#34;/ice-cream-machines&amp;#34;:[&amp;#34;static/chunks/pages/ice-cream-machines-b24176f8afd36ccb.js&amp;#34;],&amp;#34;/login&amp;#34;:[&amp;#34;static/chunks/pages/login-bbb35bf68527fb05.js&amp;#34;],&amp;#34;/menu&amp;#34;:[&amp;#34;static/chunks/pages/menu-52c4263910fef849.js&amp;#34;],sortedPages:[&amp;#34;/&amp;#34;,&amp;#34;/_app&amp;#34;,&amp;#34;/_error&amp;#34;,&amp;#34;/admin&amp;#34;,&amp;#34;/ice-cream-detail/[id]&amp;#34;,&amp;#34;/ice-cream-machines&amp;#34;,&amp;#34;/login&amp;#34;,&amp;#34;/menu&amp;#34;] There is a /admin page. Upon visiting this page, I am redirected to /login page. But NextJS we have CVE-2025-29927 which will bypass the authentication. Let&amp;rsquo;s try to add X-Middleware-Subrequest: middleware ad middleware and then send the request.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/HackDonalds/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>CTF</category>
            
          
        
        
          
            
              <category>CTF</category>
            
          
        
        
      </item>
      
      <item>
        <title>MetaCTF 2025 CTF</title>
        <link>https://g4nd1v.github.io/posts/ctf-metactf-25/</link>
        <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Thu, 27 Feb 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/ctf-metactf-25/</guid>
        <description>Cookie Crackdown Description We&amp;rsquo;re auditing some websites to check if they&amp;rsquo;re GDPR compliant, and I&amp;rsquo;m pretty sure this site isn&amp;rsquo;t&amp;hellip;
Writeup When we visit the website, and when we open the devtools, we will see the flag in Cookie tab.
Flag MetaCTF{n0nc0ns3nsu4l_c00ki3_cr4ckd0wn}
better_eval() Description I just want to let people run python code, but they keep trying to read flag.txt. So, I made a better eval that has filters to stop this!</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/MetaCTF-25/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>CTF</category>
            
          
        
        
          
            
              <category>CTF</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger XSS Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-xss/</link>
        <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Wed, 12 Feb 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-xss/</guid>
        <description>1. Lab: Reflected XSS into HTML context with nothing encoded This lab contains a simple reflected cross-site scripting vulnerability in the search functionality.
To solve the lab, perform a cross-site scripting attack that calls the alert function.
Use generic payload to alert &amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert(&amp;quot;g4nd1v&amp;quot;)&amp;lt;/script&amp;gt; in search functionality.
2. Lab: Stored XSS into HTML context with nothing encoded This lab contains a stored cross-site scripting vulnerability in the comment functionality.
To solve this lab, submit a comment that calls the alert function when the blog post is viewed.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Portswigger-XSS/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>XSS</category>
            
          
        
        
          
            
              <category>Portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger SQL Injection Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-sql-injection/</link>
        <pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Thu, 06 Feb 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-sql-injection/</guid>
        <description>1. Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data This lab contains a SQL injection vulnerability in the product category filter. When the user selects a category, the application carries out a SQL query like the following:
SELECT * FROM products WHERE category = &#39;Gifts&#39; AND released = 1
To solve the lab, perform a SQL injection attack that causes the application to display one or more unreleased products.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Portswigger-SQL-Injection/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>SQL</category>
            
          
        
        
          
            
              <category>Portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>HackTheBox Writeup - Busqueda Room</title>
        <link>https://g4nd1v.github.io/posts/hackthebox-busqueda/</link>
        <pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Thu, 19 Dec 2024 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/hackthebox-busqueda/</guid>
        <description>Busqueda Title Busqueda Description Busqueda is an Easy Difficulty Linux machine that involves exploiting a command injection vulnerability present in a Python module. By leveraging this vulnerability, we gain user-level access to the machine. To escalate privileges to root, we discover credentials within a Git config file, allowing us to log into a local Gitea service. Additionally, we uncover that a system checkup script can be executed with root privileges by a specific user.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Busqueda/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>CVE-2023-43364</category>
            
          
            
              <category>docker</category>
            
          
            
              <category>gitea</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>TryHackMe Writeup - The Lay of the Land</title>
        <link>https://g4nd1v.github.io/posts/tryhackme-the-lay-of-the-land/</link>
        <pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 26 Oct 2024 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/tryhackme-the-lay-of-the-land/</guid>
        <description>Title The Lay of the Land Description Learn about and get hands-on with common technologies and security products used in corporate environments; both host and network-based security solutions are covered. Difficulty Easy Maker tryhackme Task 1: Introduction This room introduces commonly-used concepts, technologies, and security products that we need to be aware of.
In this room, the assumption is that we have already gained access to the machine, and we are ready to expand our knowledge more about the environment by performing enumerating for the following:</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/thm-the-lay-of-the-land/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>TryHackMe</category>
            
          
        
        
          
            
              <category>TryHackMe</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
