<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>AUTHENTICATION-VULNERABILITIES on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/authentication-vulnerabilities/</link>
    <description>Recent content in AUTHENTICATION-VULNERABILITIES on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>Â©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Oct 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/authentication-vulnerabilities/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger Authentication Vulnerabilities Writeups</title>
        <link>https://g4nd1v.github.io/portswigger/portswigger-authentication-vulnerabilities/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/portswigger/portswigger-authentication-vulnerabilities/</guid>
        <description>1. Lab: Username enumeration via different responses This lab is vulnerable to username enumeration and password brute-force attacks. It has an account with a predictable username and password, which can be found in the following wordlists:
Candidate usernames
Candidate passwords
To solve the lab, enumerate a valid username, brute-force this user&amp;rsquo;s password, then access their account page.
This website returns different error messages for invalid username and invalid password.
We will use intruder in order to bruteforce username and then check by content length, after we got the correct username (acid) we will do same thing with password (letmein).</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-Authentication-Vulnerabilities/Pasted_image_20250729102434.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>AUTHENTICATION-VULNERABILITIES</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
