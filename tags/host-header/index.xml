<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>HOST-HEADER on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/host-header/</link>
    <description>Recent content in HOST-HEADER on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Oct 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/host-header/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger Host Header Writeups</title>
        <link>https://g4nd1v.github.io/portswigger/portswigger-host-header/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/portswigger/portswigger-host-header/</guid>
        <description>1. Lab: Web cache poisoning via ambiguous requests This lab is vulnerable to web cache poisoning due to discrepancies in how the cache and the back-end application handle ambiguous requests. An unsuspecting user regularly visits the site&amp;rsquo;s home page.
To solve the lab, poison the cache so the home page executes alert(document.cookie) in the victim&amp;rsquo;s browser.
In this application, on homepage, if we add /?cachebuster=1 we can able to burst cache and if we pass in another host, it will be reflected in the response.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-Host-Header/Pasted_image_20250910202645.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>HOST-HEADER</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger Host Header Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-host-header/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-host-header/</guid>
        <description>1. Lab: Web cache poisoning via ambiguous requests This lab is vulnerable to web cache poisoning due to discrepancies in how the cache and the back-end application handle ambiguous requests. An unsuspecting user regularly visits the site&amp;rsquo;s home page.
To solve the lab, poison the cache so the home page executes alert(document.cookie) in the victim&amp;rsquo;s browser.
In this application, on homepage, if we add /?cachebuster=1 we can able to burst cache and if we pass in another host, it will be reflected in the response.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-Host-Header/Pasted_image_20250910202645.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>HOST-HEADER</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
