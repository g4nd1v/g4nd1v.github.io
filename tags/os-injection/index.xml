<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>OS-INJECTION on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/os-injection/</link>
    <description>Recent content in OS-INJECTION on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>Â©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Oct 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/os-injection/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger OS Injection Writeups</title>
        <link>https://g4nd1v.github.io/portswigger/portswigger-os-injection/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/portswigger/portswigger-os-injection/</guid>
        <description>1. Lab: OS command injection, simple case This lab contains an OS command injection vulnerability in the product stock checker.
The application executes a shell command containing user-supplied product and store IDs, and returns the raw output from the command in its response.
To solve the lab, execute the whoami command to determine the name of the current user.
This lab contains a very simple command injection vulnerability without and protection in productId as well as storeId paramteres when we try to check for the stocks.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-OS-Injection/Pasted_image_20250730101140.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>OS-INJECTION</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger OS Injection Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-os-injection/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-os-injection/</guid>
        <description>1. Lab: OS command injection, simple case This lab contains an OS command injection vulnerability in the product stock checker.
The application executes a shell command containing user-supplied product and store IDs, and returns the raw output from the command in its response.
To solve the lab, execute the whoami command to determine the name of the current user.
This lab contains a very simple command injection vulnerability without and protection in productId as well as storeId paramteres when we try to check for the stocks.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-OS-Injection/Pasted_image_20250730101140.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>OS-INJECTION</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
