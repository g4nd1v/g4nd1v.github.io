<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Portswigger on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/portswigger/</link>
    <description>Recent content in Portswigger on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>Â©2025, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 12 Feb 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/portswigger/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger XSS Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-xss/</link>
        <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Wed, 12 Feb 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-xss/</guid>
        <description>1. Lab: Reflected XSS into HTML context with nothing encoded This lab contains a simple reflected cross-site scripting vulnerability in the search functionality.
To solve the lab, perform a cross-site scripting attack that calls the alert function.
Use generic payload to alert &amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert(&amp;quot;g4nd1v&amp;quot;)&amp;lt;/script&amp;gt; in search functionality.
2. Lab: Stored XSS into HTML context with nothing encoded This lab contains a stored cross-site scripting vulnerability in the comment functionality.
To solve this lab, submit a comment that calls the alert function when the blog post is viewed.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Portswigger-XSS/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>XSS</category>
            
          
        
        
          
            
              <category>Portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger SQL Injection Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-sql-injection/</link>
        <pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Thu, 06 Feb 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-sql-injection/</guid>
        <description>1. Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data This lab contains a SQL injection vulnerability in the product category filter. When the user selects a category, the application carries out a SQL query like the following:
SELECT * FROM products WHERE category = &#39;Gifts&#39; AND released = 1
To solve the lab, perform a SQL injection attack that causes the application to display one or more unreleased products.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/Portswigger-SQL-Injection/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>SQL</category>
            
          
        
        
          
            
              <category>Portswigger</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
