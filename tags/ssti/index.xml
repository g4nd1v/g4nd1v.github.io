<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>SSTI on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/ssti/</link>
    <description>Recent content in SSTI on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Oct 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/ssti/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger SSTI Writeups</title>
        <link>https://g4nd1v.github.io/portswigger/portswigger-ssti/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/portswigger/portswigger-ssti/</guid>
        <description>1. Lab: Basic server-side template injection This lab is vulnerable to server-side template injection due to the unsafe construction of an ERB template.
To solve the lab, review the ERB documentation to find out how to execute arbitrary code, then delete the morale.txt file from Carlos&amp;rsquo;s home directory.
When we click first product the URL will be as follows
/?message=Unfortunately%20this%20product%20is%20out%20of%20stock
Moreover, the message is reflected in the response, as it is ERB template, we will simply execute system function to remove morale file.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-SSTI/Pasted_image_20250901182650.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>SSTI</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger SSTI Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-ssti/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-ssti/</guid>
        <description>1. Lab: Basic server-side template injection This lab is vulnerable to server-side template injection due to the unsafe construction of an ERB template.
To solve the lab, review the ERB documentation to find out how to execute arbitrary code, then delete the morale.txt file from Carlos&amp;rsquo;s home directory.
When we click first product the URL will be as follows
/?message=Unfortunately%20this%20product%20is%20out%20of%20stock
Moreover, the message is reflected in the response, as it is ERB template, we will simply execute system function to remove morale file.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-SSTI/Pasted_image_20250901182650.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>SSTI</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>HackTheBox Writeup - IClean Room</title>
        <link>https://g4nd1v.github.io/hackthebox/hackthebox-iclean/</link>
        <pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 03 Aug 2024 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/hackthebox/hackthebox-iclean/</guid>
        <description>Title IClean Description IClean is a medium-difficulty Linux machine featuring a website for a cleaning services company. The website contains a form where users can request a quote, which is found to be vulnerable to Cross-Site Scripting (XSS). This vulnerability is exploited to steal an admin cookie, which is then used to access the administrator dashboard. The page is vulnerable to Server-Side Template Injection (SSTI), allowing us to obtain a reverse shell on the box.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/IClean/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>XSS</category>
            
          
            
              <category>gobuster</category>
            
          
            
              <category>SSTI</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>HackTheBox Writeup - IClean Room</title>
        <link>https://g4nd1v.github.io/posts/hackthebox-iclean/</link>
        <pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 03 Aug 2024 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/hackthebox-iclean/</guid>
        <description>Title IClean Description IClean is a medium-difficulty Linux machine featuring a website for a cleaning services company. The website contains a form where users can request a quote, which is found to be vulnerable to Cross-Site Scripting (XSS). This vulnerability is exploited to steal an admin cookie, which is then used to access the administrator dashboard. The page is vulnerable to Server-Side Template Injection (SSTI), allowing us to obtain a reverse shell on the box.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.ioimages/IClean/banner.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>XSS</category>
            
          
            
              <category>gobuster</category>
            
          
            
              <category>SSTI</category>
            
          
            
              <category>mysql</category>
            
          
        
        
          
            
              <category>HackTheBox</category>
            
          
            
              <category>HackTheBox/Linux</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
