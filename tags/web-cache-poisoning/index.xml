<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>WEB-CACHE-POISONING on g4nd1v</title>
    <link>https://g4nd1v.github.io/tags/web-cache-poisoning/</link>
    <description>Recent content in WEB-CACHE-POISONING on g4nd1v</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>krishnannavadia@gmail.com (g4nd1v)</managingEditor>
    <webMaster>krishnannavadia@gmail.com (g4nd1v)</webMaster>
    <copyright>©2025, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Oct 2025 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://g4nd1v.github.io/tags/web-cache-poisoning/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Portswigger Web Cache Poisoning Writeups</title>
        <link>https://g4nd1v.github.io/portswigger/portswigger-web-cache-poisoning/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/portswigger/portswigger-web-cache-poisoning/</guid>
        <description>1. Lab: Web cache poisoning with an unkeyed header This lab is vulnerable to web cache poisoning because it handles input from an unkeyed header in an unsafe way. An unsuspecting user regularly visits the site&amp;rsquo;s home page. To solve this lab, poison the cache with a response that executes alert(document.cookie) in the visitor&amp;rsquo;s browser.
We will check with param miner extension if there is any unkeyed headers, and we got X-Forwarded-For header, so I have tried to enter example.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-Web-Cache-Poisoning/Pasted_image_20250909163230.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>WEB-CACHE-POISONING</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      
      <item>
        <title>Portswigger Web Cache Poisoning Writeups</title>
        <link>https://g4nd1v.github.io/posts/portswigger-web-cache-poisoning/</link>
        <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
        <author>krishnannavadia@gmail.com (g4nd1v)</author>
        <atom:modified>Sat, 11 Oct 2025 00:00:00 +0000</atom:modified>
        <guid>https://g4nd1v.github.io/posts/portswigger-web-cache-poisoning/</guid>
        <description>1. Lab: Web cache poisoning with an unkeyed header This lab is vulnerable to web cache poisoning because it handles input from an unkeyed header in an unsafe way. An unsuspecting user regularly visits the site&amp;rsquo;s home page. To solve this lab, poison the cache with a response that executes alert(document.cookie) in the visitor&amp;rsquo;s browser.
We will check with param miner extension if there is any unkeyed headers, and we got X-Forwarded-For header, so I have tried to enter example.</description>
        
        <dc:creator>g4nd1v</dc:creator>
        <media:content url="https://g4nd1v.github.io/images/Portswigger/Portswigger-Web-Cache-Poisoning/Pasted_image_20250909163230.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Portswigger</category>
            
          
            
              <category>WEB-CACHE-POISONING</category>
            
          
        
        
          
            
              <category>portswigger</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
